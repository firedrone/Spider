;spider.nsi - A basic win32 installer for Spider
; Originally written by J Doe.
; Modified by Steve Topletz, Andrew Lewman
; See the Spider LICENSE for licensing information
;-----------------------------------------
;
!include "MUI.nsh"
!include "LogicLib.nsh"
!include "FileFunc.nsh"
!insertmacro GetParameters
!define VERSION "0.3.1.0-alpha-dev"
!define INSTALLER "spider-${VERSION}-win32.exe"
!define WEBSITE "https://www.spiderproject.org/"
!define LICENSE "LICENSE"
!define BIN "..\bin" ;BIN is where it expects to find spider.exe, spider-resolve.exe
  
 
SetCompressor /SOLID LZMA ;Tighter compression
RequestExecutionLevel user ;Updated for Vista compatibility
OutFile ${INSTALLER}
InstallDir $PROGRAMFILES\Spider
SetOverWrite ifnewer
Name "Spider"
Caption "Spider ${VERSION} Setup"
BrandingText "The Onion Router"
CRCCheck on
XPStyle on
VIProductVersion "${VERSION}"
VIAddVersionKey "ProductName" "The Onion Router: Spider"
VIAddVersionKey "Comments" "${WEBSITE}"
VIAddVersionKey "LegalTrademarks" "Three line BSD"
VIAddVersionKey "LegalCopyright" "©2004-2008, Roger Dingledine, Nick Mathewson. ©2009 The Spider Project, Inc. "
VIAddVersionKey "FileDescription" "Spider is an implementation of Onion Routing. You can read more at ${WEBSITE}"
VIAddVersionKey "FileVersion" "${VERSION}"

!define MUI_WELCOMEPAGE_TITLE "Welcome to the Spider Setup Wizard"
!define MUI_WELCOMEPAGE_TEXT "This wizard will guide you through the installation of Spider ${VERSION}.\r\n\r\nIf you have previously installed Spider and it is currently running, please exit Spider first before continuing this installation.\r\n\r\n$_CLICK"
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\win-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\win-uninstall.ico"
!define MUI_HEADERIMAGE_BITMAP "${NSISDIR}\Contrib\Graphics\Header\win.bmp"
!define MUI_FINISHPAGE_RUN "$INSTDIR\spider.exe"
!define MUI_FINISHPAGE_LINK "Visit the Spider website for the latest updates."
!define MUI_FINISHPAGE_LINK_LOCATION ${WEBSITE}

!insertmacro MUI_PAGE_WELCOME
; There's no point in having a clickthrough license: Our license adds
; certain rights, but doesn't remove them.
; !insertmacro MUI_PAGE_LICENSE "${LICENSE}"
!insertmacro MUI_PAGE_COMPONENTS
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH
!insertmacro MUI_UNPAGE_WELCOME
!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES
!insertmacro MUI_UNPAGE_FINISH
!insertmacro MUI_LANGUAGE "English"

Var CONFIGDIR
Var CONFIGFILE

Function .onInit
	Call ParseCmdLine
FunctionEnd

;Sections
;--------

Section "Spider" Spider
;Files that have to be installed for spider to run and that the user
;cannot choose not to install
	SectionIn RO
	SetOutPath $INSTDIR
	Call ExtractBinaries
	Call ExtractIcon
	WriteINIStr "$INSTDIR\Spider Website.url" "InternetShortcut" "URL" ${WEBSITE}

	StrCpy $CONFIGFILE "spiderrc"
	StrCpy $CONFIGDIR $APPDATA\Spider
;   ;If $APPDATA isn't valid here (Early win95 releases with no updated
;   ; shfolder.dll) then we put it in the program directory instead.
;   StrCmp $APPDATA "" "" +2
;      StrCpy $CONFIGDIR $INSTDIR
	SetOutPath $CONFIGDIR
	;If there's already a spiderrc config file, ask if they want to
	;overwrite it with the new one.
	${If} ${FileExists} "$CONFIGDIR\spiderrc"
		MessageBox MB_ICONQUESTION|MB_YESNO "You already have a Spider config file.$\r$\nDo you want to overwrite it with the default sample config file?" IDYES Yes IDNO No
		Yes:
			Delete $CONFIGDIR\spiderrc
			Goto Next
		No:
			StrCpy $CONFIGFILE "spiderrc.sample"
		Next:
	${EndIf}
	File /oname=$CONFIGFILE "..\src\config\spiderrc.sample"

; the geoip file needs to be included and stuffed into the right directory
; otherwise spider is unhappy
	SetOutPath $APPDATA\Spider
	Call ExtractGEOIP
SectionEnd

Section "Documents" Docs
	Call ExtractDocuments
SectionEnd

SubSection /e "Shortcuts" Shortcuts

Section "Start Menu" StartMenu
  SetOutPath $INSTDIR
  ${If} ${FileExists} "$SMPROGRAMS\Spider\*.*"
    RMDir /r "$SMPROGRAMS\Spider"
  ${EndIf}
  Call CreateSpiderLinks
  ${If} ${FileExists} "$INSTDIR\Documents\*.*"
    Call CreateDocLinks
  ${EndIf}
SectionEnd

Section "Desktop" Desktop
   SetOutPath $INSTDIR
   CreateShortCut "$DESKTOP\Spider.lnk" "$INSTDIR\spider.exe" "" "$INSTDIR\spider.ico" 
SectionEnd

Section /o "Run at startup" Startup
   SetOutPath $INSTDIR
   CreateShortCut "$SMSTARTUP\Spider.lnk" "$INSTDIR\spider.exe" "" "$INSTDIR\spider.ico" "" SW_SHOWMINIMIZED
SectionEnd

SubSectionEnd

Section "Uninstall"
   Call un.InstallPackage
SectionEnd

Section -End
    WriteUninstaller "$INSTDIR\Uninstall.exe"
    ;The registry entries simply add the Spider uninstaller to the Windows
    ;uninstall list.
    WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\Spider" "DisplayName" "Spider (remove only)"
    WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\Spider" "UninstallString" '"$INSTDIR\Uninstall.exe"'
SectionEnd

!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
!insertmacro MUI_DESCRIPTION_TEXT ${Spider} "The core executable and config files needed for Spider to run."
!insertmacro MUI_DESCRIPTION_TEXT ${Docs} "Documentation about Spider."
!insertmacro MUI_DESCRIPTION_TEXT ${ShortCuts} "Shortcuts to easily start Spider"
!insertmacro MUI_DESCRIPTION_TEXT ${StartMenu} "Shortcuts to access Spider and its documentation from the Start Menu"
!insertmacro MUI_DESCRIPTION_TEXT ${Desktop} "A shortcut to start Spider from the desktop"
!insertmacro MUI_DESCRIPTION_TEXT ${Startup} "Launches Spider automatically at startup in a minimized window"
!insertmacro MUI_FUNCTION_DESCRIPTION_END

;####################Functions#########################

Function ExtractBinaries
	File "${BIN}\spider.exe"
	File "${BIN}\spider-resolve.exe"
FunctionEnd

Function ExtractGEOIP
	File "${BIN}\geoip"
FunctionEnd

Function ExtractIcon
	File "${BIN}\spider.ico"
FunctionEnd

Function ExtractSpecs
	File "..\doc\HACKING"
	File "..\doc\spec\address-spec.txt"
	File "..\doc\spec\bridges-spec.txt"
	File "..\doc\spec\control-spec.txt"
	File "..\doc\spec\dir-spec.txt"
	File "..\doc\spec\path-spec.txt"
	File "..\doc\spec\rend-spec.txt"
	File "..\doc\spec\socks-extensions.txt"
	File "..\doc\spec\spider-spec.txt"
	File "..\doc\spec\version-spec.txt"
FunctionEnd

Function ExtractHTML
	File "..\doc\spider.html"
	File "..\doc\spiderify.html"
	File "..\doc\spider-resolve.html"
	File "..\doc\spider-gencert.html"
FunctionEnd

Function ExtractReleaseDocs
	File "..\README"
	File "..\ChangeLog"
	File "..\LICENSE"
FunctionEnd

Function ExtractDocuments
	SetOutPath "$INSTDIR\Documents"
	Call ExtractSpecs
	Call ExtractHTML
	Call ExtractReleaseDocs
FunctionEnd

Function un.InstallFiles
	Delete "$DESKTOP\Spider.lnk"
	Delete "$INSTDIR\spider.exe"
	Delete "$INSTDIR\spider-resolve.exe"
	Delete "$INSTDIR\Spider Website.url"
	Delete "$INSTDIR\spiderrc"
	Delete "$INSTDIR\spiderrc.sample"
	Delete "$INSTDIR\spider.ico"
	Delete "$SMSTARTUP\Spider.lnk"
	Delete "$INSTDIR\Uninstall.exe"
    Delete "$INSTDIR\geoip"
FunctionEnd

Function un.InstallDirecspideries
	${If} $CONFIGDIR == $INSTDIR
		RMDir /r $CONFIGDIR
	${EndIf}
	RMDir /r "$INSTDIR\Documents"
	RMDir $INSTDIR
	RMDir /r "$SMPROGRAMS\Spider"
	RMDir /r "$APPDATA\Spider"
FunctionEnd

Function un.WriteRegistry
	DeleteRegKey HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Spider"
FunctionEnd

Function un.InstallPackage
	Call un.InstallFiles
	Call un.InstallDirecspideries
	Call un.WriteRegistry
FunctionEnd

Function CreateSpiderLinks
	CreateDirecspidery "$SMPROGRAMS\Spider"
	CreateShortCut "$SMPROGRAMS\Spider\Spider.lnk" "$INSTDIR\spider.exe" "" "$INSTDIR\spider.ico"
	CreateShortCut "$SMPROGRAMS\Spider\Spiderrc.lnk" "Notepad.exe" "$CONFIGDIR\spiderrc"
	CreateShortCut "$SMPROGRAMS\Spider\Spider Website.lnk" "$INSTDIR\Spider Website.url"
	CreateShortCut "$SMPROGRAMS\Spider\Uninstall.lnk" "$INSTDIR\Uninstall.exe"
FunctionEnd

Function CreateDocLinks
	CreateDirecspidery "$SMPROGRAMS\Spider\Documents"
	CreateShortCut "$SMPROGRAMS\Spider\Documents\Spider Documentation.lnk" "$INSTDIR\Documents"
	CreateShortCut "$SMPROGRAMS\Spider\Documents\Spider Specification.lnk" "$INSTDIR\Documents\spider-spec.txt"
	CreateShortCut "$SMPROGRAMS\Spider\Documents\Spider Address Specification.lnk" "$INSTDIR\Documents\address-spec.txt"
	CreateShortCut "$SMPROGRAMS\Spider\Documents\Spider Bridges Specification.lnk" "$INSTDIR\Documents\bridges-spec.txt"
	CreateShortCut "$SMPROGRAMS\Spider\Documents\Spider Control Specification.lnk" "$INSTDIR\Documents\control-spec.txt"
	CreateShortCut "$SMPROGRAMS\Spider\Documents\Spider Direcspidery Specification.lnk" "$INSTDIR\Documents\dir-spec.txt"
	CreateShortCut "$SMPROGRAMS\Spider\Documents\Spider Path Specification.lnk" "$INSTDIR\Documents\path-spec.txt"
	CreateShortCut "$SMPROGRAMS\Spider\Documents\Spider Rend Specification.lnk" "$INSTDIR\Documents\rend-spec.txt"
	CreateShortCut "$SMPROGRAMS\Spider\Documents\Spider Version Specification.lnk" "$INSTDIR\Documents\version-spec.txt"
	CreateShortCut "$SMPROGRAMS\Spider\Documents\Spider SOCKS Extensions.lnk" "$INSTDIR\Documents\socks-extensions.txt"
FunctionEnd

Function ParseCmdLine
	${GetParameters} $1
	${If} $1 == "-x" ;Extract All Files
		StrCpy $INSTDIR $EXEDIR
		Call ExtractBinaries
		Call ExtractDocuments
		Quit
	${ElseIf} $1 == "-b" ;Extract Binaries Only
		StrCpy $INSTDIR $EXEDIR
		Call ExtractBinaries
		Quit
	${ElseIf} $1 != ""
		MessageBox MB_OK|MB_TOPMOST `${Installer} [-x|-b]$\r$\n$\r$\n  -x    Extract all files$\r$\n  -b    Extract binary files only`
		Quit
	${EndIf}
FunctionEnd

